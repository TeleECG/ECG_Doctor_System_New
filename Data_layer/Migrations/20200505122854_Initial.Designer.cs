// <auto-generated />
using System;
using Data_layer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data_layer.Migrations
{
    [DbContext(typeof(TeleMedDb))]
    [Migration("20200505122854_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Data_layer.TeleMedDb+ECGLead", b =>
                {
                    b.Property<int>("ECGLeadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("ECGLeadValues")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("ECGMeasurementId")
                        .HasColumnType("int");

                    b.Property<int>("LeadNumber")
                        .HasColumnType("int");

                    b.HasKey("ECGLeadId");

                    b.HasIndex("ECGMeasurementId");

                    b.ToTable("ECGLeads");
                });

            modelBuilder.Entity("Data_layer.TeleMedDb+ECGMeasurement", b =>
                {
                    b.Property<int>("ECGMeasurementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MeasurementNumber")
                        .HasColumnType("int");

                    b.Property<int>("PatientMeasurementId")
                        .HasColumnType("int");

                    b.HasKey("ECGMeasurementId");

                    b.HasIndex("PatientMeasurementId");

                    b.ToTable("ECGMeasurements");
                });

            modelBuilder.Entity("Data_layer.TeleMedDb+PatientMeasurement", b =>
                {
                    b.Property<int>("PatientMeasurementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CPRNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("HRV")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Pulse")
                        .HasColumnType("int");

                    b.HasKey("PatientMeasurementId");

                    b.ToTable("PatientMeasurements");
                });

            modelBuilder.Entity("Data_layer.TeleMedDb+ECGLead", b =>
                {
                    b.HasOne("Data_layer.TeleMedDb+ECGMeasurement", "ECGMeasurement")
                        .WithMany("ECGLeads")
                        .HasForeignKey("ECGMeasurementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data_layer.TeleMedDb+ECGMeasurement", b =>
                {
                    b.HasOne("Data_layer.TeleMedDb+PatientMeasurement", "PatientMeasurement")
                        .WithMany("ECGMeasurements")
                        .HasForeignKey("PatientMeasurementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
